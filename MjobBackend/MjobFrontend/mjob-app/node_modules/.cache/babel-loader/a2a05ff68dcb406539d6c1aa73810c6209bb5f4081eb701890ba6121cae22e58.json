{"ast":null,"code":"import axios from \"axios\";\nimport environment from \"../environments\";\nconst baseConfig = {\n  baseURL: environment().baseServiceUrl\n};\nexport default {\n  service: useAuth => {\n    const instance = axios.create(baseConfig);\n    instance.defaults.headers.common[\"Content-Type\"] = \"application/json;charset=UTF-8\";\n    if (useAuth) {\n      instance.interceptors.request.use(async config => {\n        const token = sessionStorage.getItem(\"auth\");\n        if (token) {\n          config.headers = {\n            ...config.headers,\n            Authorization: `Bearer ${token}`\n          };\n        }\n        return config;\n      }, error => {\n        Promise.reject(error);\n      });\n    }\n    return instance;\n  }\n};","map":{"version":3,"names":["axios","environment","baseConfig","baseURL","baseServiceUrl","service","useAuth","instance","create","defaults","headers","common","interceptors","request","use","config","token","sessionStorage","getItem","Authorization","error","Promise","reject"],"sources":["C:/Users/Korisnik/Documents/GitHub/MjobApp/MjobBackend/MjobFrontend/mjob-app/src/services/base.service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport environment from \"../environments\";\r\nconst baseConfig = {\r\n    baseURL: environment().baseServiceUrl,\r\n};\r\n\r\nexport default {\r\n    service: (useAuth) => {\r\n        const instance = axios.create(baseConfig);\r\n        instance.defaults.headers.common[\"Content-Type\"] =\r\n            \"application/json;charset=UTF-8\";\r\n        if (useAuth) {\r\n            instance.interceptors.request.use(\r\n                async (config) => {\r\n                    const token = sessionStorage.getItem(\"auth\");\r\n                    if (token) {\r\n                        config.headers = {\r\n                            ...config.headers,\r\n                            Authorization: `Bearer ${token}`,\r\n                        };\r\n                    }\r\n                    return config;\r\n                },\r\n                (error) => {\r\n                    Promise.reject(error);\r\n                }\r\n            );\r\n        }\r\n        return instance;\r\n    },\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,iBAAiB;AACzC,MAAMC,UAAU,GAAG;EACfC,OAAO,EAAEF,WAAW,EAAE,CAACG;AAC3B,CAAC;AAED,eAAe;EACXC,OAAO,EAAGC,OAAO,IAAK;IAClB,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAM,CAACN,UAAU,CAAC;IACzCK,QAAQ,CAACE,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAC5C,gCAAgC;IACpC,IAAIL,OAAO,EAAE;MACTC,QAAQ,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7B,MAAOC,MAAM,IAAK;QACd,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;QAC5C,IAAIF,KAAK,EAAE;UACPD,MAAM,CAACL,OAAO,GAAG;YACb,GAAGK,MAAM,CAACL,OAAO;YACjBS,aAAa,EAAG,UAASH,KAAM;UACnC,CAAC;QACL;QACA,OAAOD,MAAM;MACjB,CAAC,EACAK,KAAK,IAAK;QACPC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;MACzB,CAAC,CACJ;IACL;IACA,OAAOb,QAAQ;EACnB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}